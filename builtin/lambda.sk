class Fn0<T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn1<S1, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn2<S1, S2, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn3<S1, S2, S3, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn4<S1, S2, S3, S4, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn5<S1, S2, S3, S4, S5, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn6<S1, S2, S3, S4, S5, S6, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn7<S1, S2, S3, S4, S5, S6, S7, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn8<S1, S2, S3, S4, S5, S6, S7, S8, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

class Fn9<S1, S2, S3, S4, S5, S6, S7, S8, S9, T>
  def initialize(
    func: Shiika::Internal::Ptr,
    captures: Array<Shiika::Internal::Ptr>,
  )
    @func = func
    @captures = captures
  end
end

# Create `::FnX` by these ConstRef's for lambda exprs (#178)
Fn0; Fn1; Fn2; Fn3; Fn4; Fn5; Fn6; Fn7; Fn8; Fn9
